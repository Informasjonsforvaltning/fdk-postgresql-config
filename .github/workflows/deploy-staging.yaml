name: Deploy to staging

on:
  pull_request:
    branches:
      - master

jobs:
  deploy-staging:
    name: Deploy postgresql-sqlproxy to staging environment when pull request is created
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Create yaml file from secret
        id: write_file
        uses: timheuer/base64-to-file@master
        with:
          fileName: 'secret.yaml'
          encodedString: ${{ secrets.DIGDIR_FDK_POSTGRESQL_STAGING }}

      - name: Check yaml file
        run: |
          cat ${{ steps.write_file.outputs.filePath }}
          pwd
          ls

      - name: Apply Helm template
        uses: stefanprodan/kube-tools@master
        with:
          helm: 2.14.3
          command: |
            helm init --client-only
            helm repo add fdk-postgresql-config https://informasjonsforvaltning.github.io/fdk-postgresql-config/
            helm fetch --untar --untardir ./helm fdk-postgresql-config/postgresql-sqlproxy
            pwd
            ls
            helm template -f ${{ steps.write_file.outputs.filePath }} ./helm/postgresql-sqlproxy/ > ./kubectlapply.yaml
            chmod o+w ./kubectlapply.yaml
            cat kubectlapply.yaml

      - name: Get kubeconfig file from GKE
        uses: machine-learning-apps/gke-kubeconfig@master
        with:
          application_credentials: ${{ secrets.DIGDIR_FDK_DEV_AUTODEPLOY }}
          project_id: digdir-fdk-dev
          location_zone: europe-north1-a
          cluster_name: digdir-fdk-dev

      - name: Deploy to staging
        uses: docker://bitnami/kubectl:latest
        env:
          KUBECONFIG: '/github/workspace/.kube/config'
        with:
          args: "apply -f ./kubectlapply.yaml --force"

#      - name: Notify slack
#        uses: 8398a7/action-slack@v3
#        with:
#          status: ${{ job.status }}
#          author_name: 'Application: postgresql-sqlproxy | Environment: staging'
#          fields: commit,author,workflow
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#        if: always()
